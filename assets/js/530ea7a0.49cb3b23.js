(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[459],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return h}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),u=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=u(n),h=r,g=c["".concat(l,".").concat(h)]||c[h]||d[h]||s;return n?a.createElement(g,o(o({ref:t},p),{},{components:n})):a.createElement(g,o({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,o=new Array(s);o[0]=c;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var u=2;u<s;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},4768:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return p},default:function(){return c}});var a=n(2122),r=n(9756),s=(n(7294),n(3905)),o=["components"],i={title:"Setup"},l=void 0,u={unversionedId:"getting-started/setup",id:"getting-started/setup",isDocsHomePage:!1,title:"Setup",description:"Hasura Backend Plus runs in a container along side Postgres and Hasura.",source:"@site/docs/getting-started/setup.md",sourceDirName:"getting-started",slug:"/getting-started/setup",permalink:"/hasura-backend-plus/docs/getting-started/setup",editUrl:"https://github.com/nhost/hasura-backend-plus/edit/master/docs/docs/getting-started/setup.md",version:"current",frontMatter:{title:"Setup"},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/hasura-backend-plus/docs/intro"},next:{title:"Configuration",permalink:"/hasura-backend-plus/docs/getting-started/configuration"}},p=[{value:"Nhost (recommended)",id:"nhost-recommended",children:[]},{value:"Self host",id:"self-host",children:[]},{value:"Start",id:"start",children:[]},{value:"Check logs",id:"check-logs",children:[]},{value:"Startup Completed",id:"startup-completed",children:[]},{value:"Register First User",id:"register-first-user",children:[]},{value:"Login User",id:"login-user",children:[]}],d={toc:p};function c(e){var t=e.components,n=(0,r.Z)(e,o);return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Hasura Backend Plus runs in a container along side Postgres and Hasura."),(0,s.kt)("h2",{id:"nhost-recommended"},"Nhost (recommended)"),(0,s.kt)("p",null,"The recommended way to start using Hasura Backend Plus is by using Nhost."),(0,s.kt)("p",null,"With Nhost, you get a complete backend ready in seconds with Hasura, Hasura Backend Plus, Postgres and Minio."),(0,s.kt)("p",null,"Go to ",(0,s.kt)("a",{parentName:"p",href:"https://nhost.io"},"Nhost")," and start building your app now."),(0,s.kt)("h2",{id:"self-host"},"Self host"),(0,s.kt)("p",null,"Hasura Backend Plus is open source and can be self hosted."),(0,s.kt)("p",null,"Here is a ",(0,s.kt)("inlineCode",{parentName:"p"},"docker-compose.yaml")," file for the basic things you need to get started with Hasura Backend Plus."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Services:")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Postgres"),(0,s.kt)("li",{parentName:"ul"},"Hasura"),(0,s.kt)("li",{parentName:"ul"},"Hasura Backend Plus"),(0,s.kt)("li",{parentName:"ul"},"Minio")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="docker-compose.yaml"',title:'"docker-compose.yaml"'},'version: "3.6"\nservices:\n  postgres:\n    image: "nhost/postgres:12-v0.0.6"\n    restart: always\n    volumes:\n      - "./db_data:/var/lib/postgresql/data"\n    environment:\n      POSTGRES_PASSWORD: pgpassword\n      POSTGRES_DB: postgres\n  graphql-engine:\n    image: "hasura/graphql-engine:v2.0.1"\n    depends_on:\n      - postgres\n    restart: always\n    ports:\n      - "8080:8080"\n    environment:\n      HASURA_GRAPHQL_DATABASE_URL: >-\n        postgres://postgres:pgpassword@postgres:5432/postgres\n      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"\n      HASURA_GRAPHQL_ADMIN_SECRET: hello123\n      HASURA_GRAPHQL_JWT_SECRET: >-\n        {"type":"HS256", "key":\n        "jhyu89jiuhyg7678hoijhuytf7ghjiasodibagsdga9dha8os7df97a6sdgh9asudgo7f7g8h1uuoyafsod8pgasipdg8aps9dhaiaisydg8agsd87gasd9oihasd87gas78d"}\n      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: public\n    command:\n      - graphql-engine\n      - serve\n  hasura-backend-plus:\n    image: "nhost/hasura-backend-plus:latest"\n    container_name: hbp-dev-hbp\n    depends_on:\n      - graphql-engine\n    restart: always\n    ports:\n      - "4000:4000"\n    environment:\n      HOST: 0.0.0.0\n      PORT: 4000\n      DATABASE_URL: >-\n        postgres://postgres:pgpassword@postgres:5432/postgres\n      SERVER_URL: "http://localhost:4000"\n      HASURA_ENDPOINT: "http://graphql-engine:8080/v1/graphql"\n      HASURA_GRAPHQL_ADMIN_SECRET: hello123\n      JWT_KEY: >-\n        jhyu89jiuhyg7678hoijhuytf7ghjiasodibagsdga9dha8os7df97a6sdgh9asudgo7f7g8h1uuoyafsod8pgasipdg8aps9dhaiaisydg8agsd87gasd9oihasd87gas78d\n      JWT_ALGORITHM: HS256\n      ALLOWED_REDIRECT_URLS: "http://localhost"\n      JWT_CUSTOM_FIELDS: ""\n      S3_ENDPOINT: "minio:9000"\n      S3_SSL_ENABLED: "false"\n      S3_BUCKET: nhost\n      S3_ACCESS_KEY_ID: 5a7bdb5f42c41e0622bf61d6e08d5537\n      S3_SECRET_ACCESS_KEY: 9e1c40c65a615a5b52f52aeeaf549944ec53acb1dff4a0bf01fb58e969f915c8\n      AUTO_ACTIVATE_NEW_USERS: "true"\n      PROVIDER_SUCCESS_REDIRECT: "http://localhost:3001/success"\n      PROVIDER_FAILURE_REDIRECT: "http://localhost:3001/failed"\n      HIBP_ENABLED: "false"\n      DEFAULT_ALLOWED_USER_ROLES: "user,me"\n      ALLOWED_USER_ROLES: "user,me"\n      REGISTRATION_CUSTOM_FIELDS: "display_name"\n      COOKIE_SECURE: "false"\n      COOKIE_SECRET: "somelongvalue"\n      REDIRECT_URL_SUCCESS: "http://localhost:3000"\n      REDIRECT_URL_ERROR: "http://localhost:3000/fail"\n  minio:\n    image: "minio/minio:RELEASE.2020-06-18T02-23-35Z"\n    container_name: hbp-dev-minio\n    user: "999:1001"\n    restart: always\n    environment:\n      MINIO_ACCESS_KEY: 5a7bdb5f42c41e0622bf61d6e08d5537\n      MINIO_SECRET_KEY: 9e1c40c65a615a5b52f52aeeaf549944ec53acb1dff4a0bf01fb58e969f915c8\n    entrypoint: sh\n    command: -c \'mkdir -p /data/nhost && /usr/bin/minio server /data\'\n    ports:\n      - "9000:9000"\n    volumes:\n      - "./minio_data:/data"\n')),(0,s.kt)("h2",{id:"start"},"Start"),(0,s.kt)("p",null,"Start all services using:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"$ docker-compose up -d\n")),(0,s.kt)("h2",{id:"check-logs"},"Check logs"),(0,s.kt)("p",null,"Check all logs using:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"$ docker-compose logs -f\n")),(0,s.kt)("h2",{id:"startup-completed"},"Startup Completed"),(0,s.kt)("p",null,"All services should now have started and Hasura Backend Plus have added tables in the ",(0,s.kt)("inlineCode",{parentName:"p"},"auth")," schema and a ",(0,s.kt)("inlineCode",{parentName:"p"},"users")," table in the ",(0,s.kt)("inlineCode",{parentName:"p"},"public")," schema."),(0,s.kt)("p",null,"You can see them in the hasura console running on ",(0,s.kt)("a",{parentName:"p",href:"http://localhost:8080/console"},"http://localhost:8080/console"),"."),(0,s.kt)("h2",{id:"register-first-user"},"Register First User"),(0,s.kt)("p",null,"Add your first user:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'curl -d \'{"email":"someone@nhost.io", "password":"StrongPasswordNot1234"}\' -H "Content-Type: application/json" -X POST http://localhost:4000/auth/register\n')),(0,s.kt)("p",null,"Hasura Backend Plus creates the user and responds with the JWT token plus some:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jwt_token": "eyJhbGciOiJIUzI1NiJ9.eyJodHRwczovL2hhc3VyYS5pby9qd3QvY2xhaW1zIjp7IngtaGFzdXJhLXVzZXItaWQiOiIxNzlhNjRkMS0wOTg5LTRmODEtOTU3Yi1mZTQ0MzQwYThhMDMiLCJ4LWhhc3VyYS1hbGxvd2VkLXJvbGVzIjpbInVzZXIiLCJtZSJdLCJ4LWhhc3VyYS1kZWZhdWx0LXJvbGUiOiJ1c2VyIn0sInN1YiI6IjE3OWE2NGQxLTA5ODktNGY4MS05NTdiLWZlNDQzNDBhOGEwMyIsImlzcyI6Im5ob3N0IiwiaWF0IjoxNjI2MzY1NDU1LCJleHAiOjE2MjYzNjYzNTV9.KN3Y7IzeWMoMAI6GxIbW0vI6CNL2SSjaH9IN0dD4058",\n  "jwt_expires_in": 900000,\n  "user": {\n    "id": "179a64d1-0989-4f81-957b-fe44340a8a03",\n    "display_name": "someone@nhost.io",\n    "email": "someone@nhost.io"\n  }\n}\n')),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"The registration endpoint returns the JWT token because the user was automatically activated. You can change this by setting ",(0,s.kt)("inlineCode",{parentName:"p"},"AUTO_ACTIVATE_NEW_USERS")," to ",(0,s.kt)("inlineCode",{parentName:"p"},"false"),".")),(0,s.kt)("p",null,"The user is also present in the ",(0,s.kt)("inlineCode",{parentName:"p"},"users")," table in the ",(0,s.kt)("a",{parentName:"p",href:"http://localhost:8080/console/data/default/schema/public/tables/users/browse"},"Hasura Console"),"."),(0,s.kt)("h2",{id:"login-user"},"Login User"),(0,s.kt)("p",null,"A user can be logged in by sending the same request to the ",(0,s.kt)("inlineCode",{parentName:"p"},"/auth/login")," endpoint."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'curl -d \'{"email":"someone@nhost.io", "password":"StrongPasswordNot1234"}\' -H "Content-Type: application/json" -X POST http://localhost:4000/auth/login\n')))}c.isMDXComponent=!0}}]);